import{_ as t,c as a,aa as r,o}from"./chunks/framework.swcE7GHT.js";const m=JSON.parse('{"title":"单测维护","description":"","frontmatter":{"breadcrumb":false,"navbar":true,"sidebar":true,"pageInfo":true,"contributor":true,"editLink":true,"updateTime":true,"prev":true,"next":true,"comment":false,"footer":true,"backtotop":true,"title":"单测维护","category":"单测规范"},"headers":[],"relativePath":"test/单测维护.md","filePath":"test/单测维护.md"}'),s={name:"test/单测维护.md"};function i(n,e,c,l,p,u){return o(),a("div",null,e[0]||(e[0]=[r('<div class="info custom-block"><p class="custom-block-title">单测维护</p></div><h2 id="一、考虑不要跳过单测" tabindex="-1">一、考虑不要跳过单测 <a class="header-anchor" href="#一、考虑不要跳过单测" aria-label="Permalink to &quot;一、考虑不要跳过单测&quot;">​</a></h2><p>目前我们都是跳过单测的,测试都是每次改造完成后,手工去进行验证。 验证没有问题就提测了。这样的单测是没有维护性的。</p><p>当我们建立起单测体系后,真正重视单测维护后,就可以考虑不要跳过单元测试 这样,每次编译时候都可以执行一遍单测用例,观察失败的单测试服是这次改造的bug导致。</p><h2 id="二、后期维护单测" tabindex="-1">二、后期维护单测 <a class="header-anchor" href="#二、后期维护单测" aria-label="Permalink to &quot;二、后期维护单测&quot;">​</a></h2><p>开发时间紧张,没有进行单测就提测了,测试也通过了。对于这类代码后期可以补充上单测。方便后面进行业务调整时候,进行单测验证。</p><p>只有这样开发人员才更有底气。</p><h2 id="三、售后服务" tabindex="-1">三、售后服务 <a class="header-anchor" href="#三、售后服务" aria-label="Permalink to &quot;三、售后服务&quot;">​</a></h2><p>应用Owner要督促,应用成员要重视。做好应用质量把控。</p>',9)]))}const h=t(s,[["render",i]]);export{m as __pageData,h as default};
