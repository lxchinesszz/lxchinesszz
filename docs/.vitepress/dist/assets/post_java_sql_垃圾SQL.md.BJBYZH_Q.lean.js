import{_ as e,o as t,c as s,a4 as l}from"./chunks/framework.B8fosacB.js";const h=JSON.parse('{"title":"如何找到垃圾SQL语句,你知道这些方式吗？","description":"","frontmatter":{"breadcrumb":false,"navbar":true,"sidebar":true,"pageInfo":true,"contributor":true,"editLink":true,"updateTime":true,"prev":true,"next":true,"comment":false,"footer":true,"backtotop":true,"title":"如何找到垃圾SQL语句,你知道这些方式吗？","category":"SQL优化"},"headers":[],"relativePath":"post/java/sql/垃圾SQL.md","filePath":"post/java/sql/垃圾SQL.md","lastUpdated":1731158524000}'),p={name:"post/java/sql/垃圾SQL.md"};function r(n,a,o,d,i,c){return t(),s("div",{"data-pagefind-body":!0},a[0]||(a[0]=[l(`<p><img src="https://img.springlearn.cn/learn_c87a079fcea0d7893b03d4d57478bca7.png" alt=""></p><p><strong>作者</strong>: 西魏陶渊明 <strong>博客</strong>: <a href="https://blog.springlearn.cn/" target="_blank" rel="noreferrer">https://blog.springlearn.cn/</a></p><div class="tip custom-block"><p class="custom-block-title">西魏陶渊明</p><p>莫笑少年江湖梦，谁不少年梦江湖</p></div><blockquote><p>这篇文章主要是讲如何找到需要优化的SQL语句，即找到查询速度非常慢的SQL语句。</p></blockquote><h1 id="一、慢查询日志" tabindex="-1">一、慢查询日志 <a class="header-anchor" href="#一、慢查询日志" aria-label="Permalink to &quot;一、慢查询日志&quot;">​</a></h1><h2 id="_1-何为慢查询日志" tabindex="-1">1. 何为慢查询日志 <a class="header-anchor" href="#_1-何为慢查询日志" aria-label="Permalink to &quot;1. 何为慢查询日志&quot;">​</a></h2><ul><li>慢查询日志是MySQL提供的一种日志记录，它用来记录查询响应时间超过阀值的SQL语句</li><li>这个时间阀值通过参数 <code>long_query_time</code> 设置，如果SQL语句查询时间大于这个值，则会被记录到慢查询日志中，这个值默认是10秒</li><li>MySQL默认不开启慢查询日志，在需要调优的时候可以手动开启，但是多少会对数据库性能有点影响</li></ul><h2 id="_2-如何开启慢查询日志" tabindex="-1">2. 如何开启慢查询日志 <a class="header-anchor" href="#_2-如何开启慢查询日志" aria-label="Permalink to &quot;2. 如何开启慢查询日志&quot;">​</a></h2><p>查看是否开启了慢查询日志</p><p><code>SHOW VARIABLES LIKE &#39;%slow_query_log%&#39;</code></p><p>用命令方式开启慢查询日志，但是重启MySQL后此设置会失效</p><p><code>set global slow_query_log = 1</code></p><p>永久生效开启方式可以在my.cnf里进行配置，在<code>mysqld</code>下新增以下两个参数，重启MySQL即可生效</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>slow_query_log=1</span></span>
<span class="line"><span>slow_query_log_file=日志文件存储路径</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_3-慢查询时间阀值" tabindex="-1">3. 慢查询时间阀值 <a class="header-anchor" href="#_3-慢查询时间阀值" aria-label="Permalink to &quot;3. 慢查询时间阀值&quot;">​</a></h2><p>查看慢查询时间阀值</p><p><code>SHOW VARIABLES LIKE &#39;long_query_time%&#39;;</code></p><p>修改慢查询时间阀值</p><p><code>set global long_query_time=3;</code></p><p>修改后的时间阀值生效</p><p><code>需要重新连接或者新开一个回话才能看到修改值。</code></p><p>在MySQL配置文件中修改时间阀值</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[mysqld]下配置</span></span>
<span class="line"><span>slow_query_log=1</span></span>
<span class="line"><span>slow_query_log_file=日志文件存储路径</span></span>
<span class="line"><span>long_query_time=3</span></span>
<span class="line"><span>log_output=FILE</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h1 id="二、慢查询日志分析工具" tabindex="-1">二、慢查询日志分析工具 <a class="header-anchor" href="#二、慢查询日志分析工具" aria-label="Permalink to &quot;二、慢查询日志分析工具&quot;">​</a></h1><p>慢查询日志可能会数据量非常大，那么我们如何快速找到需要优化的SQL语句呢，这个神奇诞生了，它就是mysqldumpshow。</p><h2 id="_1-mysqldumpslow-help语法" tabindex="-1">1. mysqldumpslow --help语法 <a class="header-anchor" href="#_1-mysqldumpslow-help语法" aria-label="Permalink to &quot;1. mysqldumpslow --help语法&quot;">​</a></h2><p><img src="https://img.springlearn.cn/blog/learn_1596350361000.png" alt=""></p><p>通过mysqldumpslow --help可知这个命令是由三部分组成：mysqldumpslow <code>[日志查找选项] [日志文件存储位置]</code>。</p><h2 id="_2-日志查找选项" tabindex="-1">2. 日志查找选项 <a class="header-anchor" href="#_2-日志查找选项" aria-label="Permalink to &quot;2. 日志查找选项&quot;">​</a></h2><ul><li>s：是表示按何种方式排序</li></ul><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>c</td><td>访问次数</td></tr><tr><td>i</td><td>锁定时间</td></tr><tr><td>r</td><td>返回记录</td></tr><tr><td>t</td><td>查询时间</td></tr><tr><td>al</td><td>平均锁定时间</td></tr><tr><td>ar</td><td>平均返回记录数</td></tr><tr><td>at</td><td>平均查询时间</td></tr></tbody></table><ul><li>t：即为返回前面多少条的数据</li><li>g：后边搭配一个正则匹配模式，大小写不敏感的</li></ul><h2 id="_3-常用分析语法" tabindex="-1">3. 常用分析语法 <a class="header-anchor" href="#_3-常用分析语法" aria-label="Permalink to &quot;3. 常用分析语法&quot;">​</a></h2><p>查找返回记录做多的10条SQL</p><p><code>mysqldumpslow -s r -t 10 日志路径</code></p><p>查找使用频率最高的10条SQL</p><p><code>mysqldumpslow -s c -t 10 日志路径</code></p><p>查找按照时间排序的前10条里包含左连接的SQL</p><p><code>mysqldumpslow -s t -t 10 -g &quot;left join&quot; 日志路径</code></p><p>通过more查看日志，防止爆屏</p><p><code>mysqldumpslow -s r -t 10 日志路径 | more</code></p>`,41)]))}const m=e(p,[["render",r]]);export{h as __pageData,m as default};
