import{_ as a,o as n,c as i,a4 as e}from"./chunks/framework.B8fosacB.js";const o=JSON.parse('{"title":"SQL锁机制","description":"","frontmatter":{"breadcrumb":false,"navbar":true,"sidebar":true,"pageInfo":true,"contributor":true,"editLink":true,"updateTime":true,"prev":true,"next":true,"comment":false,"footer":true,"backtotop":true,"title":"SQL锁机制"},"headers":[],"relativePath":"post/java/sql/SQL锁机制.md","filePath":"post/java/sql/SQL锁机制.md","lastUpdated":1731158524000}'),p={name:"post/java/sql/SQL锁机制.md"};function l(t,s,r,h,k,c){return n(),i("div",{"data-pagefind-body":!0},s[0]||(s[0]=[e(`<p><img src="https://img.springlearn.cn/learn_c87a079fcea0d7893b03d4d57478bca7.png" alt=""></p><p><strong>作者</strong>: 西魏陶渊明 <strong>博客</strong>: <a href="https://blog.springlearn.cn/" target="_blank" rel="noreferrer">https://blog.springlearn.cn/</a></p><div class="tip custom-block"><p class="custom-block-title">西魏陶渊明</p><p>莫笑少年江湖梦，谁不少年梦江湖</p></div><h2 id="一、场景模拟" tabindex="-1">一、场景模拟 <a class="header-anchor" href="#一、场景模拟" aria-label="Permalink to &quot;一、场景模拟&quot;">​</a></h2><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> shop</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">primary key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;衣服&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  status</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;可售&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)engine </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> innodb </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> charset</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">utf8;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">insert into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> shop  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;衣服&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;可售&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mysql&gt; select * from shop;</span></span>
<span class="line"><span>+----+--------+--------+</span></span>
<span class="line"><span>| id | name   | status |</span></span>
<span class="line"><span>+----+--------+--------+</span></span>
<span class="line"><span>|  1 | 衣服   | 可售   |</span></span>
<span class="line"><span>+----+--------+--------+</span></span>
<span class="line"><span>1 row in set (0.00 sec)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>有一个X姨夫,两个用户并发操作问题</p><p>A先看到衣服: X加锁 -&gt; 试衣服 -&gt; 下单 -&gt; 付款 -&gt; 打包 -&gt; X解锁 B也相对衣服: 发现X已经被A加锁了,等待X解锁。</p><h2 id="二、锁知识" tabindex="-1">二、锁知识 <a class="header-anchor" href="#二、锁知识" aria-label="Permalink to &quot;二、锁知识&quot;">​</a></h2><h3 id="锁类型" tabindex="-1">锁类型 <a class="header-anchor" href="#锁类型" aria-label="Permalink to &quot;锁类型&quot;">​</a></h3><p>a. 读锁(共享锁): b. 写锁(互斥锁): 如果当前写操作没有完毕,则无法进行其他的写操作。</p><h3 id="锁范围" tabindex="-1">锁范围 <a class="header-anchor" href="#锁范围" aria-label="Permalink to &quot;锁范围&quot;">​</a></h3><ul><li>innodb默认行锁(开销大,加锁慢,锁范围小,易死锁,不容器锁冲突,并发度高)</li><li>MyISAM默认表锁(开销小,加锁块,无死锁,但是锁范围大容器锁冲突,并发度低)</li></ul><ol><li>表锁(对一张表整体加锁)</li><li>行锁(对一行数据进行加锁)</li></ol><hr><h2 id="三、锁分析" tabindex="-1">三、锁分析 <a class="header-anchor" href="#三、锁分析" aria-label="Permalink to &quot;三、锁分析&quot;">​</a></h2><h3 id="_1-查看加锁的表" tabindex="-1">1. 查看加锁的表 <a class="header-anchor" href="#_1-查看加锁的表" aria-label="Permalink to &quot;1. 查看加锁的表&quot;">​</a></h3><p><code>show open tables;</code></p><p>1代表加锁</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mysql&gt; show open tables;</span></span>
<span class="line"><span>+--------------------+---------------------------+--------+-------------+</span></span>
<span class="line"><span>| Database           | Table                     | In_use | Name_locked |</span></span>
<span class="line"><span>+--------------------+---------------------------+--------+-------------+</span></span>
<span class="line"><span>| test               | emp                       |      0 |           0 |</span></span>
<span class="line"><span>| test               | test_innodb_lock          |      0 |           0 |</span></span>
<span class="line"><span>| test               | test03                    |      0 |           0 |</span></span>
<span class="line"><span>| test               | teacher2                  |      0 |           0 |</span></span>
<span class="line"><span>| test               | course2                   |      0 |           0 |</span></span>
<span class="line"><span>| test               | book                      |      0 |           0 |</span></span>
<span class="line"><span>| test               | shop                      |      1 |           0 |</span></span>
<span class="line"><span>| test               | staffs                    |      0 |           0 |</span></span>
<span class="line"><span>| test               | dept                      |      0 |           0 |</span></span>
<span class="line"><span>+--------------------+---------------------------+--------+-------------+</span></span>
<span class="line"><span>73 rows in set (0.00 sec)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="_2-查看锁的严重程度" tabindex="-1">2. 查看锁的严重程度 <a class="header-anchor" href="#_2-查看锁的严重程度" aria-label="Permalink to &quot;2. 查看锁的严重程度&quot;">​</a></h3><p><code>show status like &#39;%Table_locks%&#39;;</code></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mysql&gt; show status like &#39;%Table_locks%&#39;;</span></span>
<span class="line"><span>+-----------------------+-------+</span></span>
<span class="line"><span>| Variable_name         | Value |</span></span>
<span class="line"><span>+-----------------------+-------+</span></span>
<span class="line"><span>| Table_locks_immediate | 79    |</span></span>
<span class="line"><span>| Table_locks_waited    | 0     |</span></span>
<span class="line"><span>+-----------------------+-------+</span></span>
<span class="line"><span>2 rows in set (0.00 sec)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>Table_locks_immediate</strong> 能立马加锁 <strong>Table_locks_waited</strong> 越大说明竞争越大</p><p>建议: Table_locks_immediate/Table_locks_waited &gt; 5000,建议采用innodb,否则建议MyISAM。</p><h2 id="四、模拟加表锁" tabindex="-1">四、模拟加表锁 <a class="header-anchor" href="#四、模拟加表锁" aria-label="Permalink to &quot;四、模拟加表锁&quot;">​</a></h2><p><code>lock table 表1 read/write,表2 read/write</code></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>lock table shop write;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="加表读锁" tabindex="-1">加表读锁 <a class="header-anchor" href="#加表读锁" aria-label="Permalink to &quot;加表读锁&quot;">​</a></h3><p>如A会话,对shop表加了read锁,则该会话可以对shop表进行读操作,不能进行写操作。 并且只能读自己加锁了的表,如下面列子最shop加锁,能读shop不能写shop,不能读test03</p><p><strong>如果对shop表加了read锁,那么只能对shop进行读,其他任何操作都不行了</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mysql&gt; lock table shop read;</span></span>
<span class="line"><span>Query OK, 0 rows affected (0.01 sec)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>mysql&gt; select * from shop</span></span>
<span class="line"><span>    -&gt; ;</span></span>
<span class="line"><span>+----+--------+-----------+</span></span>
<span class="line"><span>| id | name   | status    |</span></span>
<span class="line"><span>+----+--------+-----------+</span></span>
<span class="line"><span>|  1 | 衣服   | 已占用    |</span></span>
<span class="line"><span>+----+--------+-----------+</span></span>
<span class="line"><span>1 row in set (0.00 sec)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>mysql&gt; update shop set status = &#39;可售&#39; where id = 1;</span></span>
<span class="line"><span>ERROR 1099 (HY000): Table &#39;shop&#39; was locked with a READ lock and can&#39;t be updated</span></span>
<span class="line"><span>mysql&gt; select * from test03;</span></span>
<span class="line"><span>ERROR 1100 (HY000): Table &#39;test03&#39; was not locked with LOCK TABLES</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><img src="https://img.springlearn.cn/blog/learn_1596460128000.png" alt=""></p><p>其他B会话中,对于shop表能读不能写,但是不影响操作其他表。</p><p><img src="https://img.springlearn.cn/blog/learn_1596460283000.png" alt=""></p><h3 id="加表写锁" tabindex="-1">加表写锁 <a class="header-anchor" href="#加表写锁" aria-label="Permalink to &quot;加表写锁&quot;">​</a></h3><ul><li>会话A: lock table shop write; 当前会话可以对加了锁的表进行任意操作;但是不能操作其他表。</li><li>其他会话B: 当会话A释放了锁,B才能对这个表进行增删改查;</li></ul><h2 id="五、模拟加行锁" tabindex="-1">五、模拟加行锁 <a class="header-anchor" href="#五、模拟加行锁" aria-label="Permalink to &quot;五、模拟加行锁&quot;">​</a></h2><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> linelock</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">primary key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> auto_increment,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) engine </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> innodb;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">insert into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> linelock(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">insert into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> linelock(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">insert into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> linelock(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">insert into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> linelock(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">insert into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> linelock(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;5&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="a窗口写操作" tabindex="-1">A窗口写操作 <a class="header-anchor" href="#a窗口写操作" aria-label="Permalink to &quot;A窗口写操作&quot;">​</a></h3><p><code>insert into linelock(name) values(&#39;6&#39;);</code></p><p>此时B窗口执行update更新会被锁定。</p><p><img src="https://img.springlearn.cn/blog/learn_1596463371000.png" alt=""></p><p>当A会话commit之后B就能继续操作了。 <img src="https://img.springlearn.cn/blog/learn_1596463461000.png" alt=""></p><p>行锁是通过事务进行解锁的。</p><h3 id="行锁转表锁" tabindex="-1">行锁转表锁 <a class="header-anchor" href="#行锁转表锁" aria-label="Permalink to &quot;行锁转表锁&quot;">​</a></h3><p>如果索引列进行了类型转换,则索引失效。</p><p>A窗口执行 <code>update linelock set name = &#39;ai&#39; where name = 3;</code></p><p>B窗口执行 <code>update linelock set name = &#39;ax&#39; where name = 4;</code></p><p><img src="https://img.springlearn.cn/blog/learn_1596464724000.png" alt=""></p><h3 id="间隙锁" tabindex="-1">间隙锁 <a class="header-anchor" href="#间隙锁" aria-label="Permalink to &quot;间隙锁&quot;">​</a></h3><p>update linelock set name = &#39;x&#39; where id &gt; 1 and id &lt; 8;</p><p><img src="https://img.springlearn.cn/blog/learn_1596465102000.png" alt=""></p><h3 id="行锁分析" tabindex="-1">行锁分析 <a class="header-anchor" href="#行锁分析" aria-label="Permalink to &quot;行锁分析&quot;">​</a></h3><p><code>show status like &#39;%innodb_row_lock%&#39;;</code></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mysql&gt; show status like &#39;%innodb_row_lock%&#39;;</span></span>
<span class="line"><span>+-------------------------------+--------+</span></span>
<span class="line"><span>| Variable_name                 | Value  |</span></span>
<span class="line"><span>+-------------------------------+--------+</span></span>
<span class="line"><span>| Innodb_row_lock_current_waits | 1      |</span></span>
<span class="line"><span>| Innodb_row_lock_time          | 207248 |</span></span>
<span class="line"><span>| Innodb_row_lock_time_avg      | 34541  |</span></span>
<span class="line"><span>| Innodb_row_lock_time_max      | 51605  |</span></span>
<span class="line"><span>| Innodb_row_lock_waits         | 6      |</span></span>
<span class="line"><span>+-------------------------------+--------+</span></span>
<span class="line"><span>5 rows in set (0.00 sec)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><img src="https://img.springlearn.cn/blog/learn_1596465415000.png" alt=""></p><table><thead><tr><th>Variable_name</th><th>Value</th></tr></thead><tbody><tr><td>Innodb_row_lock_current_waits</td><td>当前正在等待的锁的数量</td></tr><tr><td>Innodb_row_lock_time</td><td>等待总时长,从系统启动到现在一共等待时间</td></tr><tr><td>Innodb_row_lock_time_avg</td><td>平均等待时长</td></tr><tr><td>Innodb_row_lock_time_max</td><td>最大等待时长</td></tr><tr><td>Innodb_row_lock_waits</td><td>等待的次数</td></tr></tbody></table><h3 id="查询语句加锁" tabindex="-1">查询语句加锁 <a class="header-anchor" href="#查询语句加锁" aria-label="Permalink to &quot;查询语句加锁&quot;">​</a></h3><p><code>set autocommit=0;</code><code>select * from linelock for update;</code></p><p><img src="https://img.springlearn.cn/blog/learn_1596466172000.png" alt=""></p><p>最后求关注,求订阅,谢谢你的阅读!</p>`,62)]))}const b=a(p,[["render",l]]);export{o as __pageData,b as default};
