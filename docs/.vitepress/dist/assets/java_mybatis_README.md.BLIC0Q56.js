import{_ as t,c as a,o as e,ac as r}from"./chunks/framework.C9DUt1S1.js";const d=JSON.parse('{"title":"Mybatis","description":"","frontmatter":{"breadcrumb":false,"navbar":true,"sidebar":true,"pageInfo":true,"contributor":true,"editLink":true,"updateTime":true,"prev":true,"next":true,"comment":true,"footer":true,"backtotop":true,"title":"Mybatis"},"headers":[],"relativePath":"java/mybatis/README.md","filePath":"java/mybatis/README.md"}'),s={name:"java/mybatis/README.md"},i=r('<p><img src="https://mybatis.org/images/mybatis-logo.png" alt=""></p><h1 id="什么是-mybatis-官方文档" tabindex="-1">什么是 MyBatis？<a href="https://mybatis.net.cn/" target="_blank" rel="noreferrer">官方文档</a> <a class="header-anchor" href="#什么是-mybatis-官方文档" aria-label="Permalink to &quot;什么是 MyBatis？[官方文档](https://mybatis.net.cn/)&quot;">​</a></h1><p>MyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和获取结果集的工作。MyBatis 可以通过简单的 XML 或注解来配置和映射原始类型、接口和 Java POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录。</p><h1 id="重构mybatis博客" tabindex="-1">重构Mybatis博客 <a class="header-anchor" href="#重构mybatis博客" aria-label="Permalink to &quot;重构Mybatis博客&quot;">​</a></h1><p>最早使用Mybatis是在2016年,那时候学习只会用,根本不知道什么原理,不懂的原理的地方只能死记。搭建一个小的demo放到github,工作需要的时候就直接复制黏贴,虽然也能满足工作需要但是总感觉到不带劲。在找到工作后大概2017年时候就对Mybatis的源码进行了阅读，其实相对于Dubbo,Spring,之类的源码Mybatis的源码还是非常简单的,现在也经常推荐给刚开始学习看源码的同学。 早在2019年小编就开始写Mybatis的博客了,那时候博客主要还是自己学习为主,现在回头看看,感觉有些粗糙。这里准备回炉重造一波。将原博客进行优化。对Mybaits的核心功能，核心处理类重新重构下博客。</p><p><a href="https://github.com/lxchinesszz/mybatis-opensource-example" target="_blank" rel="noreferrer"><img src="https://img.shields.io/badge/%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB-mybatis--opensource--example-green" alt=""></a></p>',6),o=[i];function n(b,c,m,p,l,_){return e(),a("div",null,o)}const h=t(s,[["render",n]]);export{d as __pageData,h as default};
