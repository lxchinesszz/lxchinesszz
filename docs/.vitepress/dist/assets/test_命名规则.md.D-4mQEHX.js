import{_ as r,E as o,c as s,m as e,a as t,J as n,w as c,ac as l,o as i}from"./chunks/framework.C9DUt1S1.js";const _="/junit.gif",N=JSON.parse('{"title":"命名规则","description":"","frontmatter":{"breadcrumb":false,"navbar":true,"sidebar":true,"pageInfo":true,"contributor":true,"editLink":true,"updateTime":true,"prev":true,"next":true,"comment":false,"footer":true,"backtotop":true,"title":"命名规则","category":"单测规范"},"headers":[],"relativePath":"test/命名规则.md","filePath":"test/命名规则.md"}'),p={name:"test/命名规则.md"},d=e("div",{class:"info custom-block"},[e("p",{class:"custom-block-title"},"命名规则"),e("p",null,[t("单测类: 类名 + "),e("code",null,"Test"),t(" 整体大驼峰")]),e("p",null,[t("单测方法: "),e("code",null,"test"),t(" + 方法名 整体小驼峰")])],-1),u=e("h3",{id:"保证目录结构是一致的",tabindex:"-1"},[t("保证目录结构是一致的 "),e("a",{class:"header-anchor",href:"#保证目录结构是一致的","aria-label":'Permalink to "保证目录结构是一致的"'},"​")],-1),m=l('<p><img src="https://img.springlearn.cn/blog/learn_1618123124000.png" alt=""></p><p>其实Idea已经为我们提供了快捷操作,如下图。</p><p><img src="'+_+'" alt=""></p><h3 id="快捷键" tabindex="-1">快捷键 <a class="header-anchor" href="#快捷键" aria-label="Permalink to &quot;快捷键&quot;">​</a></h3><p><img src="https://img.springlearn.cn/blog/learn_1618036976000.png" alt=""></p>',5);function h(g,f,b,T,k,x){const a=o("Highlight");return i(),s("div",null,[d,u,e("p",null,[t("在这里有个误区,发现很多同学都是随意去创建测试类,其实这不是一个好的习惯,在Maven项目中, 要尽量保证测试类与被测类的目录结构是一致的。如下图一样。这样的好处是,我们可以快速在 这两个类中进行快捷键跳转,也方便我们去新增测试方法。"),n(a,{color:"green"},{default:c(()=>[t("跳转快捷键和创建快捷键保持一致,见下文.")]),_:1})]),m])}const P=r(p,[["render",h]]);export{N as __pageData,P as default};
