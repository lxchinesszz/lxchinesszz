import{_ as n,E as e,c as l,J as t,w as h,ac as p,m as s,a as i,o as k}from"./chunks/framework.C9DUt1S1.js";const C=JSON.parse('{"title":"线程池扫盲","description":"","frontmatter":{"breadcrumb":false,"navbar":true,"sidebar":true,"pageInfo":true,"contributor":true,"editLink":true,"updateTime":true,"prev":true,"next":true,"comment":false,"footer":true,"backtotop":true,"title":"线程池扫盲","category":"Java进阶"},"headers":[],"relativePath":"java/线程池.md","filePath":"java/线程池.md"}'),r={name:"java/线程池.md"},d=p("",22),o=s("p",null,"这张图是小编之前画的，但是头条压缩了，导致图不太清楚，大家看到字就行了",-1),c=s("p",null,[s("img",{src:"https://img.springlearn.cn/blog/learn_1640316132000.png",alt:""})],-1),g=s("h2",{id:"_1-执行顺序",tabindex:"-1"},[i("1. 执行顺序 "),s("a",{class:"header-anchor",href:"#_1-执行顺序","aria-label":'Permalink to "1. 执行顺序"'},"​")],-1),E=s("ol",null,[s("li",null,"首先交给核心线程数来执行corePoolSize"),s("li",null,"如果核心都用完了，就放到workQueue队列里面"),s("li",null,"当队列和核心线程数都满了，就继续创建线程，直到等于maximumPoolSize为止"),s("li",null,"当任务已经塞不下了，就开始执行拒绝策略(下一篇讲)")],-1);function y(u,A,D,F,m,b){const a=e("font");return k(),l("div",null,[d,t(a,{color:"red"},{default:h(()=>[i("上面的文字可能你看的不太明白，小编这里画了一个图，大家仔细看看 ")]),_:1}),o,c,g,E])}const S=n(r,[["render",y]]);export{C as __pageData,S as default};
